#+title: leafはなぜ動くのか - lisp特有の特徴「同図像性」を読み解く
#+author: conao3

* 背景
leafは私の初めて書いたパッケージですが、初めて書いた題材ながら、「lispらしい力」を使えるいい題材だったと思います。
lisp歴の浅い私が「lispらしい力」を語るのはお笑い種かもしれませんが、lispでない言語で同じ仕組みを実装するのは困難を極めたことは確実でしょう。

lispは極めて先進的な機能を多く有しており、GCや高階関数など多言語に取り入れられた特徴も多いです。
私が取り上げる「同図像性」は多言語では実装の難しい、lisp独自の特徴です。

この特徴を使えることが私がlisp系言語を使う理由であり、ぜひ布教に努めていきたい所存です。

なお、この記事ではElispの実行例を示します。

* leafとは
leafとはEmacsの拡張パッケージであり、その説明記事はこちらで読むことが出来ます。
- [[https://qiita.com/conao3/items/dc88bdadb0523ef95878][{正式リリース}leaf.elで雑然としたEmacs設定ファイル「init.el」をクリーンにする]]

Emacs初心者の方でもleafを使うことで、「パッケージの設定」に集中できますし、出力するコードを読んでみることでElisp力を

* 同図像性
同図像性は「データとプログラムが同じ形式で書ける性質」で、lisp以外の言語では無理矢理、文字列をリード/実行によって実現することになると思います。

多言語との比較は私には出来ないので、ぜひお読みの方の得意な言語ではどうやって実現できるか考えてもらえればと思います。

